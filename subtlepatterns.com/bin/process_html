#!/usr/bin/env python

## Convert SubtlePatterns site into usable YAML file

import sys
import re
import yaml

from pyquery import PyQuery as Q


def get_patterns_from_doc(doc):
    for post in doc("#content .post"):
        qpost = Q(post)
        yield {
            "title": qpost(".entry-title").text(),
            "link": qpost(".entry-title a").attr("href"),
            "download": qpost(".download").attr("href"),
            "description": qpost(".entry-content > p").eq(0).text(),
            "categories": get_categories_from_classes(qpost.attr("class")),
            "author": re.search("^Made by (.*).", qpost(".entry-content > p").eq(1).html()).groups()[0],
            "image": re.search("background\-image: url\('?(.*?)'?\)", qpost(".patternpreview").attr("style")).groups()[0],
        }

def get_patterns_from_filename(filename):
    with open(filename) as file:
        return get_patterns_from_doc(Q(unicode(file.read().decode("utf8"))))

def get_categories_from_classes(classes):
    """
    Return categories from a class set like
        post-1543 post type-post status-publish format-standard hentry category-uncategorized tag-dark loop
    """
    return [klass.replace("tag-", "") for klass in classes.split() if klass.startswith("tag-")]

if __name__ == "__main__":

    assert len(sys.argv) > 1, "usage: process_html <file1 file2 file...>"

    patterns = []

    for filename in sys.argv[1:]:
        for pattern in get_patterns_from_filename(filename):
            patterns.append(pattern)

    sys.stdout.write(yaml.safe_dump(patterns, default_flow_style=False).decode("utf8"))
